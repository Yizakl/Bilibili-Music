name: Build Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'  # 使用更稳定的版本
          channel: 'stable'
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ${{ runner.tool_cache }}/flutter
          key: ${{ runner.os }}-flutter
      
      - name: Install dependencies
        run: |
          flutter config --enable-windows-desktop
          flutter pub get
      
      - name: Verify Flutter setup
        run: flutter doctor -v
      
      - name: Build Windows App
        run: flutter build windows --release
      
      - name: Create zip archive
        run: |
          Compress-Archive -Path build\windows\x64\runner\Release\* -DestinationPath bilibili_music_windows.zip
      
      - name: Upload Windows build
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: bilibili_music_windows.zip
  
  build-ios:
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Setup Ruby and Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      
      - name: Build iOS (no signing)
        run: |
          flutter build ios --release --no-codesign
          cd ios
          mkdir Payload
          cp -r build/ios/iphoneos/Runner.app Payload
          zip -r bilibili_music_ios.ipa Payload
      
      - name: Upload iOS build
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: ios/bilibili_music_ios.ipa

  build-android:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ${{ runner.tool_cache }}/flutter
          key: ${{ runner.os }}-flutter
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Verify Flutter setup
        run: flutter doctor -v
      
      - name: Build Android APK
        run: flutter build apk --release
      
      - name: Upload Android build
        uses: actions/upload-artifact@v3
        with:
          name: android-build
          path: build/app/outputs/flutter-apk/app-release.apk
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/windows/**/*.exe
            build/linux/**/*
          retention-days: 5

  create-release:
    needs: [build-windows, build-ios, build-android]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Download Windows build
        uses: actions/download-artifact@v3
        with:
          name: windows-build
          path: artifacts/windows
      
      - name: Download iOS build
        uses: actions/download-artifact@v3
        with:
          name: ios-build
          path: artifacts/ios
      
      - name: Download Android build
        uses: actions/download-artifact@v3
        with:
          name: android-build
          path: artifacts/android
      
      - name: List downloaded artifacts
        run: |
          ls -la artifacts/windows/
          ls -la artifacts/android/
      
      - name: Generate version
        id: version
        run: echo "version=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            artifacts/windows/bilibili_music_windows.zip
            artifacts/ios/bilibili_music_ios.ipa
            artifacts/android/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}